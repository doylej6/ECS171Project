X_kbest = df.drop(['duration_in_mins'], axis=1)
Y_kbest = df['duration_in_mins']
X_kbest = np.asarray(X_kbest.values)
Y_kbest = np.asarray(Y_kbest.values)
test = SelectKBest(score_func=f_classif, k=15)
fit = test.fit(X_kbest, Y_kbest)
set_printoptions(precision=3)
print(fit.scores_)
features = fit.transform(X)
print(features[0:3,:])

import matplotlib.pyplot as plt
X_indices = np.arange(X_kbest.shape[-1])
ax = plt.bar(X_indices, fit.scores_, width=.2)
avg = np.average(fit.scores_)
print(avg)
feature_names = list(df.drop(['duration_in_mins'], axis=1).columns.values)
mask = test.get_support() #list of booleans
new_features = [] # The list of your K best features

for bool, feature in zip(mask, feature_names):
    if bool:
        new_features.append(feature)
new_features
